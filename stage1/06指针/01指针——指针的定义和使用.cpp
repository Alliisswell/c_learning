#include<iostream>

using namespace std;

/*
**指针的作用：** 可以通过指针间接访问内存
* 内存编号是从0开始记录的，一般用十六进制数字表示
* 可以利用指针变量保存地址
* 指针的实质：指针是一种特殊变量，是用来记录其他变量的地址信息（十六进制数字）
* 指针变量定义语法： 数据类型* 变量名；（注意：*号和数据类型之间没有空格）
*/

int main1()
{

	int a = 10;
	//1、定义指针
	//语法：数据类型* 指针变量名；
	//指针的数据类型要和所指向的变量的数据类型一致
	int* p;
	//让指针记录变量a的地址（建立指针和变量地址之间的关系）
	p = &a;
	cout << "a的地址为：" << (int)&a << endl;
	cout << "指针p为：" << (int)p << endl;

	//2、使用指针
	//可以通过解引用的方式来找到指针指向的内存
	//指针前面加 * 代表解引用，找到指针指向的内存中的数据
	*p = 1000;

	cout << "a = " << a << endl;
	cout << "*p = " << *p << endl;

	system("pause");

	return 0;
}

/*
* 指针变量和普通变量的区别：
* 普通变量存放的是数据,指针变量存放的是地址
* 指针变量可以通过" * "操作符，操作指针变量指向的内存空间，这个过程称为解引用
*/

//> 总结1：我们可以通过 & 符号获取变量的地址
//
//> 总结2：利用指针可以记录地址
//
//> 总结3：对指针变量解引用，可以操作指针指向的内存

/*

#include<iostream>

using namespace std;

int main()
{

	

	system("pause");

	return 0;
}

*/