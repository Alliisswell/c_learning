#include<iostream>

using namespace std;

/*
### 5.1 数组
概述：所谓数组，就是一个集合，里面存放了相同类型的数据元素

特点1：数组中的每个==数据元素都是相同的数据类型==

特点2：数组是由==连续的内存==位置组成的
*/

/*
一维数组的定义方式：
1. 数据类型  数组名[ 数组长度 ]; 
2. 数据类型  数组名[ 数组长度 ] = { 值1，值2 ...};
3. 数据类型  数组名[ ] = { 值1，值2 ...};
*/

int main1()
{
	//1、数据类型 数组名[数组长度];
	//int arr[5];
	////给数组中的元素赋值
	//数组元素的下标是从0开始索引的
	//arr[0] = 10;
	//arr[1] = 20;
	//arr[2] = 30;
	//arr[3] = 40;
	//arr[4] = 50;
	////访问数组元素
	//cout << arr[0] << endl;
	//cout << arr[1] << endl;
	//cout << arr[2] << endl;
	//cout << arr[3] << endl;
	//cout << arr[4] << endl;

	
	//2、数据类型 数组名[数组长度]={a1,a2...};
	//如果在初始化数据的时候，没有全部填写完，会用0来填补剩余数据
	/*int arr[5] = {10,20,30};

	for (int i = 0; i < 5; i++)
	{
		cout << arr[i] << endl;
	}*/
	

	//3、数组类型 数组名[ ]={a1,a2...};
	//定义数组的时候，必须有初始长度
	int arr[] = {9,8,7,6,5,4,3,2,1};

	for (int i = 0; i < 9; i++)
	{
		cout << arr[i] << endl;
	}

	system("pause");

	return 0;
}
/*
> 总结1：数组名的命名规范与变量名命名规范一致，不要和变量重名

> 总结2：数组中下标是从0开始索引
*/

/*
#include<iostream>

using namespace std;

int main()
{
	
	system("pause");

	return 0;
}
*/