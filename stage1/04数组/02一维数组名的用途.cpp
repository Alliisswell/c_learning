#include<iostream>

using namespace std;

/*
一维数组名称的**用途**：
1. 可以统计整个数组在内存中的长度，就是占用内存空间的大小
2. 再根据数组元素占用内存空间的大小，就可以知道数组元素个数
3. 可以获取数组在内存中的首地址，首地址是一个常量，而数组名就指向这个地址（即数组名是一个常量）

//&为取址符，查看元素地址时需要添加取址符

*/

int main2()
{
	//1、可以通过数组名统计整个数组占用内存大小
	int arr[] = {1,2,3,4,5,6,7,8,9,10};
	cout << "整个数组占用内存空间为：" << sizeof(arr) << endl;  //10*4=40
	cout << "每个元素占用内存空间为：" << sizeof(arr[0]) << endl;  //4 因为 int 整型数据占4个字节的内存空间
	cout << "数组中元素个数为：" << sizeof(arr) / sizeof(arr[0]) << endl;

	//2、可以通过数组名查看数组首地址
	cout << "数组首地址为：" << (int)arr << endl;//(int)arr，强制输出为整形数据，arr数组名是常量，指向数组首地址
	cout << "数组中第一个元素地址为：" << (int)&arr[0] << endl;//&为取址符，查看元素地址时需要添加取址符
	cout << "数组中第二个元素地址为：" << (int)&arr[1] << endl;

	//数组名是常量，不可以进行赋值操作
	//arr=100;这是错误的

	system("pause");

	return 0;
}

//> 注意：数组名是常量，不可以赋值
//
//> 总结1：直接打印数组名，可以查看数组所占内存的首地址
//
//> 总结2：对数组名进行sizeof，可以获取整个数组占内存空间的大小